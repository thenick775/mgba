set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} \
	-O0 \
	-s FULL_ES2=1 \
	-s USE_SDL=2 \
	-s TOTAL_MEMORY=256mb \
	-s STACK_SIZE=32MB \
	-s DEFAULT_PTHREAD_STACK_SIZE=32mb \
	-s EXPORTED_RUNTIME_METHODS=[\"FS\",\"cwrap\"] \
	-s ENVIRONMENT='web,worker' \
	-s PROXY_TO_PTHREAD=1 \
	-s PTHREAD_POOL_SIZE=16 \
	-s OFFSCREENCANVAS_SUPPORT=1 \
	-s OFFSCREENCANVASES_TO_PTHREAD='#screen' \
	-s OFFSCREEN_FRAMEBUFFER=1 \
	-s EMULATE_FUNCTION_POINTER_CASTS=1 \
	-s EXPORT_ES6=1 \
	-s MODULARIZE=1 \
	-s EXPORT_NAME=${CMAKE_PROJECT_NAME} \
	-s ASSERTIONS=1 \
	-s WASM_BIGINT=1 \
	-g \
	-pthread \
	--flto \
	--pre-js ${CMAKE_CURRENT_SOURCE_DIR}/pre.js")
add_executable(${BINARY_NAME}.js main.c memory.c ../sdl/sdl-audio.c ../sdl/sdl-events.c)
set_target_properties(${BINARY_NAME}.js PROPERTIES
	COMPILE_DEFINITIONS "${OS_DEFINES};${FEATURE_DEFINES};${FUNCTION_DEFINES}"
	COMPILE_OPTIONS "-sUSE_SDL=2;-pthread"
	LINK_DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/pre.js"
	OUTPUT_NAME ${BINARY_NAME})
target_link_libraries(${BINARY_NAME}.js ${BINARY_NAME} ${OS_LIB})

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/mgba.d.ts ${CMAKE_CURRENT_BINARY_DIR}/${BINARY_NAME}.d.ts)
